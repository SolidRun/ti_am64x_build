From 04f693120f88ee614b809817b735d436e2a89b74 Mon Sep 17 00:00:00 2001
From: Alvaro-Karsz <alvaro.karsz@solid-run.com>
Date: Tue, 11 Jan 2022 16:54:00 +0200
Subject: [PATCH] PHY Bringup.

Bringup CPSW PHY in U-boot.
This is done by writing to PHY registers.
PHY uses Generic PHY driver.

Signed-off-by: Alvaro-Karsz <alvaro.karsz@solid-run.com>
---
 .../solidrun/am64x_solidrun/am64x_solidrun.c  | 67 ++++++++++++++++++-
 .../solidrun/am64x_solidrun/am64x_solidrun.h  | 16 ++++-
 2 files changed, 81 insertions(+), 2 deletions(-)

diff --git a/board/solidrun/am64x_solidrun/am64x_solidrun.c b/board/solidrun/am64x_solidrun/am64x_solidrun.c
index 46974442..bbb6a49c 100644
--- a/board/solidrun/am64x_solidrun/am64x_solidrun.c
+++ b/board/solidrun/am64x_solidrun/am64x_solidrun.c
@@ -278,11 +278,76 @@ void am64xSolidRunResetPhy(am64x_solidrun_gpio_t *reset)
 	mdelay(10);
 }
 
+/*function to write to MMD registers in TI's PHY*/
+int am64x_sr_phy_write_mmd(struct phy_device *phydev, u16 addr, u16 val)
+{
+	int ret;
+
+	/* Steps:
+	 * 1) Write 0x1f into Register Control Register.
+	 * 2) Write addr into Address or Data Register.
+	 * 3) Write 0x401f into Register Control Register.
+	 * 4) Write val into  Address or Data Register.
+	 */
+
+	ret = phy_write(phydev, MDIO_DEVAD_NONE, AM64X_SR_PHY_REGCR_REG, 0x1f);
+	if (ret)
+		return ret;
+
+	ret = phy_write(phydev, MDIO_DEVAD_NONE, AM64X_SR_PHY_ADDAR_REG, addr);
+	if (ret)
+		return ret;
+
+	ret = phy_write(phydev, MDIO_DEVAD_NONE, AM64X_SR_PHY_REGCR_REG, 0x401f);
+	if (ret)
+		return ret;
+
+	return  phy_write(phydev, MDIO_DEVAD_NONE, AM64X_SR_PHY_ADDAR_REG, val);
+}
+
+
 
 
 int board_phy_config(struct phy_device *phydev)
 {
-	return 0;
+	int ret;
+
+	/* write into BMCR
+	 * speed selection = 1000 Mbps
+	 * A/N enable
+	 * duplex = full
+	 */
+	ret = phy_write(phydev, MDIO_DEVAD_NONE, AM64X_SR_PHY_BMCR_REG, 0x1140);
+	if (ret)
+		return ret;
+
+	/* write into GEN_CFG1*/
+	ret = phy_write(phydev, MDIO_DEVAD_NONE, AM64X_SR_PHY_GEN_CFG1_REG, 0xb00);
+	if (ret)
+		return ret;
+
+	/* write into PHY_CONTROL */
+	ret = phy_write(phydev, MDIO_DEVAD_NONE, AM64X_SR_PHY_PHY_CONTROL_REG, 0x5048);
+	if (ret)
+		return ret;
+
+	/* write into OP_MODE_DECODE */
+	ret = am64x_sr_phy_write_mmd(phydev, AM64X_SR_PHY_OP_MODE_DECODE_REG, 0x0);
+	if (ret)
+		return ret;
+
+	/* write into ANA_RGMII_DLL_CTRL */
+	ret = am64x_sr_phy_write_mmd(phydev, AM64X_SR_PHY_ANA_RGMII_DLL_CTRL_REG, 0x3d0);
+	if (ret)
+		return ret;
+
+	/* write into RGMII_CTRL */
+	ret = am64x_sr_phy_write_mmd(phydev, AM64X_SR_PHY_RGMII_CTRL_REG, 0xd2);
+	if (ret)
+		return ret;
+
+	/* write into GEN_CTRL - SW reset*/
+	return phy_write(phydev, MDIO_DEVAD_NONE, AM64X_SR_PHY_GEN_CTRL_REG, 0x4000);
 }
 
 /*
diff --git a/board/solidrun/am64x_solidrun/am64x_solidrun.h b/board/solidrun/am64x_solidrun/am64x_solidrun.h
index 9b6e3e5c..999ebd8e 100644
--- a/board/solidrun/am64x_solidrun/am64x_solidrun.h
+++ b/board/solidrun/am64x_solidrun/am64x_solidrun.h
@@ -62,6 +62,19 @@
 #define AM64X_SR_MAC_ADDR3_BASE_ADDR          0xc   /*MAC ADDRESS 3 base address*/
 
 
+/*PHY info*/
+#define AM64X_SR_PHY_BMCR_REG                 0x0
+#define AM64X_SR_PHY_GEN_CFG1_REG             0x9
+#define AM64X_SR_PHY_PHY_CONTROL_REG          0x10
+#define AM64X_SR_PHY_GEN_CTRL_REG             0x1f
+#define AM64X_SR_PHY_OP_MODE_DECODE_REG       0x1df
+#define AM64X_SR_PHY_ANA_RGMII_DLL_CTRL_REG   0x86
+#define AM64X_SR_PHY_RGMII_CTRL_REG           0x32
+#define AM64X_SR_PHY_REGCR_REG                0xd
+#define AM64X_SR_PHY_ADDAR_REG                0xe
+
+
+
 #ifdef CONFIG_BOARD_LATE_INIT
 
 
@@ -74,7 +87,6 @@ typedef struct am64x_solidrun_gpio {
   u32 muxRegAddr;       /*MUX address for relevant IO*/
 } am64x_solidrun_gpio_t;
 
-
 /*fill am64x_solidrun_gpio_t struct, receives the GPIO details and MUX address for this IO*/
 int8_t buildAm64xSolidRunGpio(uint8_t gpioBase, uint8_t gpioNum, u32 muxAddress, am64x_solidrun_gpio_t *gpio);
 
@@ -106,6 +118,8 @@ int8_t resetSimpleLink(void);
 
 int board_phy_config(struct phy_device *phydev);
 
+int am64x_sr_phy_write_mmd(struct phy_device *phydev, u16 addr, u16 val);
+
 /*function to read MAC addresses from eFuse and save in environment*/
 void am64xSolidrunSetMacAddresses(void);
 
-- 
2.25.1

