From 7bcbafecc9ebee8b8eb57278d3eaee3c1b9fefbb Mon Sep 17 00:00:00 2001
From: Josua Mayer <josua@solid-run.com>
Date: Thu, 11 Jan 2024 16:43:59 +0100
Subject: [PATCH 11/12] net: phy: ti: dp83869: fix rx/tx delay value parsing

rgmii delay registers use magic values from 0-15 representing discrete
delay values. Device-Tree however specifies the delay in picoseconds.
An array provides mapping between magic number and delay.

Fix dp83869_of_init to properly initialise private structure delay value
with array index of given device-tree value if present, instead of value
in picoseconds.

This fixes writing invalid values to delay control register, e.g. 2000ps
overflows the 4 bits controlling delay value.
---
 drivers/net/phy/dp83869.c | 39 ++++++++++++++++++++-------------------
 1 file changed, 20 insertions(+), 19 deletions(-)

diff --git a/drivers/net/phy/dp83869.c b/drivers/net/phy/dp83869.c
index a64e462412..7e66ff3ed0 100644
--- a/drivers/net/phy/dp83869.c
+++ b/drivers/net/phy/dp83869.c
@@ -177,6 +177,24 @@ static int dp83869_set_strapped_mode(struct phy_device *phydev)
 	return 0;
 }
 
+static s32 dp83869_of_parse_delay(ofnode node, const char *propname)
+{
+	const int delay_entries = ARRAY_SIZE(dp83869_internal_delay);
+	int i, ret;
+	u32 val;
+
+	ret = ofnode_read_u32(node, propname, &val);
+	if (!ret)
+		for (i = 0; i < delay_entries; i++)
+			if (val == dp83869_internal_delay[i])
+				return i;
+
+	pr_debug("%s not set/invalid, default to %ups\n",
+		 propname,
+		 dp83869_internal_delay[DP83869_CLK_DELAY_DEF]);
+	return DP83869_CLK_DELAY_DEF;
+}
+
 /**
  * dp83869_data_init - Convenience function for setting PHY specific data
  *
@@ -185,7 +203,6 @@ static int dp83869_set_strapped_mode(struct phy_device *phydev)
 static int dp83869_of_init(struct phy_device *phydev)
 {
 	struct dp83869_private * const dp83869 = phydev->priv;
-	const int delay_entries = ARRAY_SIZE(dp83869_internal_delay);
 	int ret;
 	ofnode node;
 
@@ -243,29 +260,13 @@ static int dp83869_of_init(struct phy_device *phydev)
 	/* RX delay *must* be specified if internal delay of RX is used. */
 	if (phydev->interface == PHY_INTERFACE_MODE_RGMII_ID ||
 	    phydev->interface == PHY_INTERFACE_MODE_RGMII_RXID) {
-		dp83869->rx_int_delay = ofnode_read_u32_default(node, "rx-internal-delay-ps",
-								DP83869_CLK_DELAY_DEF);
-		if (dp83869->rx_int_delay > delay_entries) {
-			dp83869->rx_int_delay = DP83869_CLK_DELAY_DEF;
-			pr_debug("rx-internal-delay-ps not set/invalid, default to %ups\n",
-				 dp83869_internal_delay[dp83869->rx_int_delay]);
-		}
-
-		dp83869->rx_int_delay = dp83869_internal_delay[dp83869->rx_int_delay];
+		dp83869->rx_int_delay = dp83869_of_parse_delay(node, "rx-internal-delay-ps");
 	}
 
 	/* TX delay *must* be specified if internal delay of RX is used. */
 	if (phydev->interface == PHY_INTERFACE_MODE_RGMII_ID ||
 	    phydev->interface == PHY_INTERFACE_MODE_RGMII_TXID) {
-		dp83869->tx_int_delay = ofnode_read_u32_default(node, "tx-internal-delay-ps",
-								DP83869_CLK_DELAY_DEF);
-		if (dp83869->tx_int_delay > delay_entries) {
-			dp83869->tx_int_delay = DP83869_CLK_DELAY_DEF;
-			pr_debug("tx-internal-delay-ps not set/invalid, default to %ups\n",
-				 dp83869_internal_delay[dp83869->tx_int_delay]);
-		}
-
-		dp83869->tx_int_delay = dp83869_internal_delay[dp83869->tx_int_delay];
+		dp83869->tx_int_delay = dp83869_of_parse_delay(node, "tx-internal-delay-ps");
 	}
 
 	return 0;
-- 
2.35.3

