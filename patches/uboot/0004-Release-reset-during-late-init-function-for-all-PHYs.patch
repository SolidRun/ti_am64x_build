From d58f3e22fcb68fbaa08e98d1cb82b2296d3556b1 Mon Sep 17 00:00:00 2001
From: Alvaro-Karsz <alvaro.karsz@solid-run.com>
Date: Sun, 17 Oct 2021 15:11:45 +0300
Subject: [PATCH 04/16] Release reset during late init function for all PHYs

---
 .../solidrun/am64x_solidrun/am64x_solidrun.c  | 73 +++++++++++++++++++
 1 file changed, 73 insertions(+)

diff --git a/board/solidrun/am64x_solidrun/am64x_solidrun.c b/board/solidrun/am64x_solidrun/am64x_solidrun.c
index 4ba18507f7..fda39a73d3 100644
--- a/board/solidrun/am64x_solidrun/am64x_solidrun.c
+++ b/board/solidrun/am64x_solidrun/am64x_solidrun.c
@@ -132,8 +132,81 @@ static void setup_serial(void)
 #endif
 
 #ifdef CONFIG_BOARD_LATE_INIT
+
+
+#define PHY1_RESET_GPIO_NUM   84
+#define PHY1_RESET_MUX_ADDR   0x000F4154
+#define PHY1_RESET_DIR_ADDR   0x00600060
+#define PHY1_RESET_SET_ADDR   0x00600068
+#define PHY1_RESET_DATA_ADDR  0x00600064
+
+#define PHY2_RESET_GPIO_NUM   20
+#define PHY2_RESET_MUX_ADDR   0x000F4150
+#define PHY2_RESET_DIR_ADDR   0x00600010
+#define PHY2_RESET_SET_ADDR   0x00600018
+#define PHY2_RESET_DATA_ADDR  0x00600014
+
+#define PHY3_RESET_GPIO_NUM   52
+#define PHY3_RESET_MUX_ADDR   0x000F40D4
+#define PHY3_RESET_DIR_ADDR   0x00600038
+#define PHY3_RESET_SET_ADDR   0x00600040
+#define PHY3_RESET_DATA_ADDR  0x0060003C
+
+
+
+
+/*release reset signal -  phy chip*/
+void releaseResetPhy(int gpioNum, u32 muxAddr, u32 dirAddr, u32 setAddr, u32 dataAddr)
+{
+	u32 muxGpioVal = 0x00050007,
+	    val = 0;
+
+	/* Since a gpio register is 32 bit long, get the relevant bit in register from gpio number */
+	gpioNum %= 32;
+
+	/*select GPIO function in MUX register*/
+	writel(muxGpioVal, muxAddr);
+
+
+	/*write to set data register*/
+	writel( (1 << gpioNum), setAddr); //set the gpio bit value as '1'
+
+
+
+	/*write to dir register*/
+	writel(0, dirAddr); //'0' - output
+
+
+
+	/*read data register, set relevant bit as '1' to release from reset*/
+	val = readl(dataAddr);
+
+	val |= (1 << gpioNum);
+
+	writel(val, dataAddr);
+}
+
+void initPhy(void)
+{
+
+	/*release the reset line for the first PHY*/
+	releaseResetPhy(PHY1_RESET_GPIO_NUM, PHY1_RESET_MUX_ADDR, PHY1_RESET_DIR_ADDR, PHY1_RESET_SET_ADDR, PHY1_RESET_DATA_ADDR);
+
+	/*release the reset line for the second PHY*/
+	releaseResetPhy(PHY2_RESET_GPIO_NUM, PHY2_RESET_MUX_ADDR, PHY2_RESET_DIR_ADDR, PHY2_RESET_SET_ADDR, PHY2_RESET_DATA_ADDR);
+
+	/*release the reset line for the third PHY*/
+	releaseResetPhy(PHY3_RESET_GPIO_NUM, PHY3_RESET_MUX_ADDR, PHY3_RESET_DIR_ADDR, PHY3_RESET_SET_ADDR, PHY3_RESET_DATA_ADDR);
+}
+
 int board_late_init(void)
 {
+
+	/*init PHY*/
+	initPhy();
+
+
+
 	if (IS_ENABLED(CONFIG_TI_I2C_BOARD_DETECT)) {
 		struct ti_am6_eeprom *ep = TI_AM6_EEPROM_DATA;
 
-- 
2.35.3

