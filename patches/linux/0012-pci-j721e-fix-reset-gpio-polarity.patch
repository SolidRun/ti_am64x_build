From dd1aab6b28a156874624f20023ac623f65fd38f5 Mon Sep 17 00:00:00 2001
From: Josua Mayer <josua@solid-run.com>
Date: Tue, 5 Sep 2023 12:45:16 +0200
Subject: [PATCH 12/15] pci: j721e: fix reset-gpio polarity

The meaning of 0 and 1 in gpiod_set_value depends on device-tree
GPIO_ACTIVE_LOW / GPIO_ACTIVE_HIGH setting.

Drivers should use 1 = assert, 0 = deassert independent from
electrical level. Unfortunately this driver uses 1 = deassert,
requiring inverted specification in device-tree instead.

Resolution not possible because this behaviour is already mainline -
and changes will break other boards.

Fixes: 931015e ("pci: j721e: support optional bus clock")

Signed-off-by: Josua Mayer <josua@solid-run.com>
---
 drivers/pci/controller/cadence/pci-j721e.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/pci/controller/cadence/pci-j721e.c b/drivers/pci/controller/cadence/pci-j721e.c
index c705fb296099..c2f342a427f9 100644
--- a/drivers/pci/controller/cadence/pci-j721e.c
+++ b/drivers/pci/controller/cadence/pci-j721e.c
@@ -647,7 +647,7 @@ static int j721e_pcie_probe(struct platform_device *pdev)
 				dev_err(dev, "Failed to get reset GPIO\n");
 			goto err_get_sync;
 		}
-		gpiod_set_value_cansleep(gpiod, 1);
+		gpiod_set_value_cansleep(gpiod, 0);
 
 		ret = cdns_pcie_init_phy(dev, cdns_pcie);
 		if (ret) {
@@ -693,7 +693,7 @@ static int j721e_pcie_probe(struct platform_device *pdev)
 		 */
 		if (gpiod) {
 			usleep_range(100, 200);
-			gpiod_set_value_cansleep(gpiod, 0);
+			gpiod_set_value_cansleep(gpiod, 1);
 		}
 
 		ret = cdns_pcie_host_setup(rc);
-- 
2.35.3

