From 23485f97a6fb9da3f3ca1b56c8aed7875ea74021 Mon Sep 17 00:00:00 2001
From: Josua Mayer <josua@solid-run.com>
Date: Sun, 9 Apr 2023 16:24:05 +0300
Subject: [PATCH 8/8] arm64: dts: Add SolidRun AM642 HummingBoard-T

Signed-off-by: Josua Mayer <josua@solid-run.com>
---
 arch/arm64/boot/dts/ti/Makefile               |    2 +
 .../boot/dts/ti/k3-am642-hummingboard-t.dts   | 1066 +++++++++++++++++
 2 files changed, 1068 insertions(+)
 create mode 100644 arch/arm64/boot/dts/ti/k3-am642-hummingboard-t.dts

diff --git a/arch/arm64/boot/dts/ti/Makefile b/arch/arm64/boot/dts/ti/Makefile
index adc62f1c1b3b..03f040d7cc42 100644
--- a/arch/arm64/boot/dts/ti/Makefile
+++ b/arch/arm64/boot/dts/ti/Makefile
@@ -74,6 +74,8 @@ dtb-$(CONFIG_ARCH_K3) += k3-am642-evm-nand.dtbo
 
 dtb-$(CONFIG_ARCH_K3) += k3-am642-sk.dtb
 
+dtb-$(CONFIG_ARCH_K3) += k3-am642-hummingboard-t.dtb
+
 dtb-$(CONFIG_ARCH_K3) += k3-am625-sk.dtb
 dtb-$(CONFIG_ARCH_K3) += k3-am62x-lp-sk.dtb
 dtb-$(CONFIG_ARCH_K3) += k3-am625-skeleton.dtb
diff --git a/arch/arm64/boot/dts/ti/k3-am642-hummingboard-t.dts b/arch/arm64/boot/dts/ti/k3-am642-hummingboard-t.dts
new file mode 100644
index 000000000000..f6c6243cfdd3
--- /dev/null
+++ b/arch/arm64/boot/dts/ti/k3-am642-hummingboard-t.dts
@@ -0,0 +1,1066 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Copyright (C) 2020-2021 Texas Instruments Incorporated - https://www.ti.com/
+ * Copyright 2022 Alvaro-Karsz <alvaro.karsz@solid-run.com>
+ * Copyright 2022 Moaath Abusalh <moaath.abusalh@solid-run.com>
+ * Copyright 2023 Yazan Shhady <yazan.shhady@solid-run.com>
+ * Copyright 2023 Josua Mayer <josua@solid-run.com>
+ */
+
+/dts-v1/;
+
+#include "k3-am642.dtsi"
+#include <dt-bindings/leds/common.h>
+#include <dt-bindings/mux/ti-serdes.h>
+#include <dt-bindings/net/ti-dp83869.h>
+#include <dt-bindings/phy/phy.h>
+
+/*
+ * choose either USB-3.1 or PCI-E
+ * 1: USB-3.1
+ * 0: PCI-E
+ */
+#define SERDES0_USB3 1
+
+/*
+ * route to either connectors M1 or M2
+ * 1: M1
+ * 0: M2
+ */
+#define SERDES0_M1 1
+
+/ {
+	model = "SolidRun AM6442 HummingBoard-T";
+	compatible = "solidrun,am642-hummingboard-t", "ti,am642";
+
+	chosen {
+		stdout-path = "serial2:115200n8";
+		bootargs = "earlycon=ns16550a,mmio32,0x02800000";
+	};
+
+	aliases {
+		ethernet0 = &cpsw_port1;
+		ethernet1 = &icssg1_emac0;
+		ethernet2 = &icssg1_emac1;
+		mmc0 = &sdhci0;
+		mmc1 = &sdhci1;
+	};
+
+	clk_pcie_m1: clock-pcie-m1 {
+		compatible = "fixed-clock";
+		clock-frequency = <100000000>;
+		clock-output-names = "pcie_busclk_m1";
+		gpios = <&main_gpio1 16 GPIO_ACTIVE_LOW>;
+		#clock-cells = <0>;
+	};
+
+	clk_pcie_m2: clock-pcie-m2 {
+		compatible = "fixed-clock";
+		clock-frequency = <100000000>;
+		clock-output-names = "pcie_busclk_m2";
+		gpios = <&main_gpio1 14 GPIO_ACTIVE_LOW>;
+		#clock-cells = <0>;
+	};
+
+	clk_pcie_soc: clock-pcie-soc {
+		compatible = "fixed-clock";
+		clock-frequency = <100000000>;
+		clock-output-names = "pcie_refclk";
+		gpios = <&main_gpio1 8 GPIO_ACTIVE_LOW>;
+		#clock-cells = <0>;
+	};
+
+	/* PRU Ethernet Controller (should be in dtsi) */
+	icssg1_eth: icssg1-eth {
+		status = "disabled";
+		compatible = "ti,am642-icssg-prueth";
+
+		sram = <&oc_sram>;
+		ti,prus = <&pru1_0>, <&rtu1_0>, <&tx_pru1_0>, <&pru1_1>, <&rtu1_1>, <&tx_pru1_1>;
+		firmware-name = "ti-pruss/am65x-sr2-pru0-prueth-fw.elf",
+				"ti-pruss/am65x-sr2-rtu0-prueth-fw.elf",
+				"ti-pruss/am65x-sr2-txpru0-prueth-fw.elf",
+				"ti-pruss/am65x-sr2-pru1-prueth-fw.elf",
+				"ti-pruss/am65x-sr2-rtu1-prueth-fw.elf",
+				"ti-pruss/am65x-sr2-txpru1-prueth-fw.elf";
+
+		ti,pruss-gp-mux-sel = <2>,	/* MII mode */
+				      <2>,
+				      <2>,
+				      <2>,	/* MII mode */
+				      <2>,
+				      <2>;
+
+		mii-g-rt = <&icssg1_mii_g_rt>;
+		mii-rt = <&icssg1_mii_rt>;
+		iep = <&icssg1_iep0>,  <&icssg1_iep1>;
+
+		interrupt-parent = <&icssg1_intc>;
+		interrupts = <24 0 2>, <25 1 3>;
+		interrupt-names = "tx_ts0", "tx_ts1";
+
+		dmas = <&main_pktdma 0xc200 15>, /* egress slice 0 */
+		       <&main_pktdma 0xc201 15>, /* egress slice 0 */
+		       <&main_pktdma 0xc202 15>, /* egress slice 0 */
+		       <&main_pktdma 0xc203 15>, /* egress slice 0 */
+		       <&main_pktdma 0xc204 15>, /* egress slice 1 */
+		       <&main_pktdma 0xc205 15>, /* egress slice 1 */
+		       <&main_pktdma 0xc206 15>, /* egress slice 1 */
+		       <&main_pktdma 0xc207 15>, /* egress slice 1 */
+		       <&main_pktdma 0x4200 15>, /* ingress slice 0 */
+		       <&main_pktdma 0x4201 15>, /* ingress slice 1 */
+		       <&main_pktdma 0x4202 0>, /* mgmnt rsp slice 0 */
+		       <&main_pktdma 0x4203 0>; /* mgmnt rsp slice 1 */
+		dma-names = "tx0-0", "tx0-1", "tx0-2", "tx0-3",
+			    "tx1-0", "tx1-1", "tx1-2", "tx1-3",
+			    "rx0", "rx1",
+			    "rxmgm0", "rxmgm1";
+
+		icssg1_emac0: ethernet-mii0 {
+			status = "disabled";
+			syscon-rgmii-delay = <&main_conf 0x4110>;
+			/* Filled in by bootloader */
+			local-mac-address = [00 00 00 00 00 00];
+		};
+
+		icssg1_emac1: ethernet-mii1 {
+			status = "disabled";
+			syscon-rgmii-delay = <&main_conf 0x4114>;
+			/* Filled in by bootloader */
+			local-mac-address = [00 00 00 00 00 00];
+		};
+	};
+
+	leds {
+		status = "okay";
+		compatible = "gpio-leds";
+		pinctrl-names = "default";
+		pinctrl-0 = <&leds_pins_default>;
+
+		/* Carrier (D24) */
+		led1: led-1 {
+			label = "led1:green";
+			gpios = <&main_gpio0 29 GPIO_ACTIVE_HIGH>;
+		};
+
+		/* Carrier (D25) */
+		led2: led-2 {
+			label = "led2:green";
+			gpios = <&main_gpio0 30 GPIO_ACTIVE_HIGH>;
+		};
+
+		/* Carrier (D26) */
+		led3: led-3 {
+			label = "led3:green";
+			gpios = <&main_gpio0 33 GPIO_ACTIVE_HIGH>;
+		};
+	};
+
+	memory@80000000 {
+		device_type = "memory";
+		/* 1GB, TODO: handle in bootloader */
+		reg = <0x00000000 0x80000000 0x00000000 0x40000000>;
+	};
+
+	/* 3.3V power to both M.2 connectors : M1, M2 */
+	regulator-m2-3v3 {
+		compatible = "regulator-fixed";
+		regulator-name = "m2-3v3";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&regulator_pcie_3v3_pins_default>;
+		gpio = <&main_gpio1 31 GPIO_ACTIVE_HIGH>;
+		enable-active-high;
+		regulator-always-on;
+	};
+
+	/* gpio shared between efuse supply (VPP_1V8) & pcie clock generator supply */
+	regulator-vpp-1v8 {
+		compatible = "regulator-fixed";
+		regulator-name = "vpp-1v8";
+		regulator-min-microvolt = <1800000>;
+		regulator-max-microvolt = <1800000>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&regulator_vpp_1v8_pins_default>;
+		gpio = <&main_gpio1 78 GPIO_ACTIVE_HIGH>;
+		enable-active-high;
+
+		/* enable by default for pcie clock generator ... */
+		regulator-always-on;
+	};
+
+	vdd_mmc0: regulator-vdd-mmc0 {
+		compatible = "regulator-fixed";
+		regulator-name = "vdd-mmc0";
+		regulator-min-microvolt = <1800000>;
+		regulator-max-microvolt = <1800000>;
+		regulator-always-on;
+		regulator-boot-on;
+	};
+
+	reserved-memory {
+		#address-cells = <2>;
+		#size-cells = <2>;
+		ranges;
+
+		secure_ddr: optee@9e800000 {
+			reg = <0x00 0x9e800000 0x00 0x01800000>; /* for OP-TEE */
+			alignment = <0x1000>;
+			no-map;
+		};
+	};
+};
+
+&cpsw3g {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&rgmii1_pins_default>;
+};
+
+&cpsw_port1 {
+	status = "okay";
+	phy-mode = "rgmii-rxid";
+	phy-handle = <&ethernet_phy0>;
+};
+
+&cpsw_port2 {
+	status = "disabled";
+};
+
+&cpsw3g_mdio {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&mdio0_pins_default>;
+
+	/* SoM */
+	ethernet_phy0: dp83869@0 {
+		status = "okay";
+		compatible = "ethernet-phy-id2000.a0f1";
+		reg = <0>;
+		ti,clk-output-sel = <DP83869_CLK_O_SEL_REF_CLK>;
+		ti,op-mode = <DP83869_RGMII_COPPER_ETHERNET>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&ethernet_phy0_pins_default>;
+		/*
+		 * Disable interrupts because ISR never clears 0x0040
+		 *
+		 * interrupt-parent = <&main_gpio1>;
+		 * interrupts = <70 IRQ_TYPE_LEVEL_LOW>;
+		 */
+		/*
+		 * Disable HW Reset because clock signal is daisy-chained
+		 *
+		 * reset-gpios = <&main_gpio0 84 GPIO_ACTIVE_LOW>;
+		 * reset-assert-us = <1>;
+		 * reset-deassert-us = <30>;
+		 */
+	};
+};
+
+&icssg0_mdio {
+	status = "disabled";
+};
+
+&icssg1_mdio {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&pru1_mdio0_pins_default>;
+
+	/* SoM */
+	ethernet_phy1: dp83869@3 {
+		status = "okay";
+		compatible = "ethernet-phy-id2000.a0f1";
+		reg = <3>;
+		ti,clk-output-sel = <DP83869_CLK_O_SEL_REF_CLK>;
+		ti,op-mode = <DP83869_RGMII_COPPER_ETHERNET>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&ethernet_phy1_pins_default>;
+		/*
+		 * Disable interrupts because ISR never clears 0x0040
+		 *
+		 * interrupt-parent = <&main_gpio1>;
+		 * interrupts = <70 IRQ_TYPE_LEVEL_LOW>;
+		 */
+		/*
+		 * Disable HW Reset because clock signal is daisy-chained
+		 *
+		 * reset-gpios = <&main_gpio0 20 GPIO_ACTIVE_LOW>;
+		 * reset-assert-us = <1>;
+		 * reset-deassert-us = <30>;
+		 */
+	};
+
+	/* SoM */
+	ethernet_phy2: dp83869@f {
+		status = "okay";
+		compatible = "ethernet-phy-id2000.a0f1";
+		reg = <0xf>;
+		ti,op-mode = <DP83869_RGMII_COPPER_ETHERNET>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&ethernet_phy2_pins_default>;
+		/*
+		 * Disable interrupts because ISR never clears 0x0040
+		 *
+		 * interrupt-parent = <&main_gpio1>;
+		 * interrupts = <70 IRQ_TYPE_LEVEL_LOW>;
+		 */
+		/*
+		 * Disable HW Reset because clock signal is daisy-chained
+		 *
+		 * reset-gpios = <&main_gpio0 52 GPIO_ACTIVE_LOW>;
+		 * reset-assert-us = <1>;
+		 * reset-deassert-us = <30>;
+		 */
+	};
+};
+
+&icssg1_eth {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&pru_rgmii1_pins_default>, <&pru_rgmii2_pins_default>;
+};
+
+&icssg1_emac0 {
+	status = "okay";
+	phy-handle = <&ethernet_phy2>;
+	phy-mode = "rgmii-rxid";
+};
+
+&icssg1_emac1 {
+	status = "okay";
+	phy-handle = <&ethernet_phy1>;
+	phy-mode = "rgmii-rxid";
+};
+
+&mailbox0_cluster2 {
+	status = "disabled";
+};
+
+&mailbox0_cluster3 {
+	status = "disabled";
+};
+
+&mailbox0_cluster4 {
+	status = "disabled";
+};
+
+&mailbox0_cluster5 {
+	status = "disabled";
+};
+
+&mailbox0_cluster6 {
+	status = "disabled";
+};
+
+&mailbox0_cluster7 {
+	status = "disabled";
+};
+
+&main_gpio0 {
+	status = "okay";
+
+	m2_reset {
+		gpio-hog;
+		gpios = <12 GPIO_ACTIVE_LOW>;
+		output-low; /* deasserted */
+		line-name = "m2-reset";
+	};
+
+	m1_m2_w_disable1 {
+		gpio-hog;
+		gpios = <32 GPIO_ACTIVE_LOW>;
+		output-low; /* deasserted */
+		line-name = "m1-m2-pcie-w-disable1";
+	};
+
+	m1_m2_w_disable2 {
+		gpio-hog;
+		gpios = <34 GPIO_ACTIVE_LOW>;
+		output-low; /* deasserted */
+		line-name = "m1-m2-pcie-w-disable2";
+	};
+};
+
+&main_gpio1 {
+	status = "okay";
+
+	m1_pcie_clkreq0 {
+		gpio-hog;
+		gpios = <11 GPIO_ACTIVE_LOW>;
+		input;
+		line-name = "m1-pcie-clkreq0";
+	};
+
+	m2_pcie_clkreq {
+		gpio-hog;
+		gpios = <35 GPIO_ACTIVE_LOW>;
+		input;
+		line-name = "m2-pcie-clkreq";
+	};
+
+	serdes_mux_sel {
+		gpio-hog;
+		/* carrier has pull-down */
+		gpios = <40 GPIO_ACTIVE_HIGH>;
+#if SERDES0_M1
+		output-high; /* asserted */
+#else /* M2 */
+		output-low; /* deasserted */
+#endif
+		line-name = "serdes-mux-sel";
+	};
+
+	serdes_mux_en {
+		gpio-hog;
+		gpios = <41 GPIO_ACTIVE_LOW>;
+		output-high; /* asserted */
+		line-name = "serdes-mux-en";
+	};
+};
+
+&main_i2c0 {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&main_i2c0_pins_default>, <&main_i2c0_int_pins_default>;
+
+	/* Carrier */
+	humidity_sensor: hdc2010@40 {
+		status = "okay";
+		compatible = "ti,hdc2010";
+		reg = <0x40>;
+		interrupt-parent = <&main_gpio0>;
+		interrupts = <37 IRQ_TYPE_EDGE_FALLING>;
+	};
+
+	/* Carrier */
+	light_sensor: opt3002@44 {
+		status = "okay";
+		compatible = "ti,opt3001";
+		reg = <0x44>;
+		interrupt-parent = <&main_gpio0>;
+		interrupts = <37 IRQ_TYPE_EDGE_FALLING>;
+	};
+
+	/* SoM */
+	som_eeprom: eeprom@50 {
+		status = "okay";
+		compatible = "atmel,24c02";
+		reg = <0x50>;
+		pagesize = <16>;
+	};
+
+	/* Carrier */
+	pcie_clock_generator: pi6cfgl401b@68 {
+		status = "okay";
+		compatible = "pericom,pi6cfgl401b";
+		reg = <0x68>;
+		/*
+		 * TODO: address depend on SADR pin (floating)
+		 * - 0 = 0x68
+		 * - 1 = 0x6A
+		 */
+	};
+
+	/* Carrier */
+	charger: bq25713@6a {
+		status = "okay";
+		compatible = "ti,bq25713";
+		reg = <0x6a>;
+	};
+};
+
+&main_i2c1 {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&main_i2c1_pins_default>;
+
+	/* Carrier */
+	rtc: am1805aq@69 {
+		status = "okay";
+		compatible = "abracon,abx80x";
+		reg = <0x69>;
+		abracon,tc-diode = "schottky";
+		abracon,tc-resistor = <3>;
+		pinctrl-0 = <&main_i2c1_rtc_pins_default>;
+		pinctrl-names = "default";
+		interrupt-parent = <&main_gpio0>;
+		interrupts = <36 IRQ_TYPE_EDGE_FALLING>;
+	};
+};
+
+&main_i2c2 {
+	status = "disabled";
+};
+
+&main_i2c3 {
+	status = "disabled";
+};
+
+&main_mcan0 {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&main_mcan0_pins_default>;
+
+	/* Carrier */
+	can-transceiver {
+		max-bitrate = <8000000>;
+	};
+};
+
+&main_mcan1 {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&main_mcan1_pins_default>;
+
+	/* Carrier */
+	can-transceiver {
+		max-bitrate = <8000000>;
+	};
+};
+
+&main_pmx0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&ethernet_phy_pins_default>;
+
+	ethernet_phy_pins_default: ethernet-phy-pins-default {
+		pinctrl-single,pins = <
+			/* external pull-up on SoM */
+			AM64X_IOPAD(0x0278, PIN_INPUT, 7)	/* Pad EXTINTn Mux GPIO1_70 */
+		>;
+	};
+
+	ethernet_phy0_pins_default: ethernet-phy0-pins-default {
+		pinctrl-single,pins = <
+			/* reset */
+			AM64X_IOPAD(0x0154, PIN_OUTPUT, 7)	/* Pad PRG1_PRU1_GPO19 Mux GPIO0_84 */
+			/* reference clock */
+			AM64X_IOPAD(0x0274, PIN_OUTPUT, 5)	/* Pad EXT_REFCLK1 Mux CLKOUT0 */
+		>;
+	};
+
+	ethernet_phy1_pins_default: ethernet-phy1-pins-default {
+		pinctrl-single,pins = <
+			/* reset */
+			AM64X_IOPAD(0x0150, PIN_OUTPUT, 7)	/* Pad PRG1_PRU1_GPO18 Mux GPIO0_20 */
+			/* led0, external pull-down on SoM */
+			AM64X_IOPAD(0x0128, PIN_INPUT, 7)	/* Pad PRG1_PRU1_GPO8 Mux GPIO0_73 */
+			/* led1/rxer */
+			AM64X_IOPAD(0x011c, PIN_INPUT, 7)	/* Pad PRG1_PRU1_GPO5 Mux GPIO0_70 */
+		>;
+	};
+
+	ethernet_phy2_pins_default: ethernet-phy2-pins-default {
+		pinctrl-single,pins = <
+			/* reset */
+			AM64X_IOPAD(0x00d4, PIN_OUTPUT, 7)	/* Pad PRG1_PRU0_GPO7 Mux GPIO0_52 */
+
+			/* led0, external pull-down on SoM */
+			AM64X_IOPAD(0x00d8, PIN_INPUT, 7)	/* Pad PRG1_PRU0_GPO8 Mux GPIO0_53 */
+			/* led1/rxer */
+			AM64X_IOPAD(0x00cc, PIN_INPUT, 7)	/* Pad PRG1_PRU0_GPO5 Mux GPIO0_50 */
+		>;
+	};
+
+	leds_pins_default: leds-pins-default {
+		pinctrl-single,pins = <
+			AM64X_IOPAD(0x0074, PIN_OUTPUT, 7)	/* Pad GPMC0_AD14 Mux GPIO0_29 */
+			AM64X_IOPAD(0x0078, PIN_OUTPUT, 7)	/* Pad GPMC0_AD15 Mux GPIO0_30 */
+			AM64X_IOPAD(0x0088, PIN_OUTPUT, 7)	/* Pad GPMC0_OEn_REn Mux GPIO0_33 */
+		>;
+	};
+
+	main_i2c0_pins_default: main-i2c0-pins-default {
+		pinctrl-single,pins = <
+			/* external pull-up on SoM */
+			AM64X_IOPAD(0x0260, PIN_INPUT, 0)	/* Pad I2C0_SCL Mux I2C0_SCL */
+			AM64X_IOPAD(0x0264, PIN_INPUT, 0)	/* Pad I2C0_SDA Mux I2C0_SDA */
+		>;
+	};
+
+	main_i2c0_int_pins_default: main-i2c0-pins-int-default {
+		pinctrl-single,pins = <
+			/* external pull-up on Carrier */
+			AM64X_IOPAD(0x0098, PIN_INPUT, 7)	/* Pad GPMC0_WAIT0 Mux GPIO0_37 */
+		>;
+	};
+
+	main_i2c1_pins_default: main-i2c1-pins-default {
+		pinctrl-single,pins = <
+			/* external pull-up on SoM */
+			AM64X_IOPAD(0x0268, PIN_INPUT, 0)	/* Pad I2C1_SCL Mux I2C1_SCL */
+			AM64X_IOPAD(0x026c, PIN_INPUT, 0)	/* Pad I2C1_SDA Mux I2C1_SDA */
+		>;
+	};
+
+	main_i2c1_rtc_pins_default: main-i2c1-rtc-pins-default {
+		pinctrl-single,pins = <
+			/* external pull-up on Carrier */
+			AM64X_IOPAD(0x0094, PIN_INPUT, 7)	/* Pad GPMC0_BE1n Mux GPIO0_36 */
+		>;
+	};
+
+	main_mcan0_pins_default: main-mcan0-pins-default {
+		pinctrl-single,pins = <
+			AM64X_IOPAD(0x0254, PIN_INPUT, 0)	/* Pad MCAN0_RX Mux MCAN0_RX */
+			AM64X_IOPAD(0x0250, PIN_OUTPUT, 0)	/* Pad MCAN0_TX Mux MCAN0_TX */
+		>;
+	};
+
+	main_mcan1_pins_default: main-mcan1-pins-default {
+		pinctrl-single,pins = <
+			AM64X_IOPAD(0x025c, PIN_INPUT, 0)	/* Pad MCAN1_RX Mux MCAN1_RX */
+			AM64X_IOPAD(0x0258, PIN_OUTPUT, 0)	/* Pad MCAN1_TX Mux MCAN1_TX */
+		>;
+	};
+
+	/*
+	 * main_mmc0_pins_default: main-mmc0-pins-default
+	 *
+	 * MMC0_CMD: no padconfig
+	 * MMC0_CLK: no padconfig, external pull-up on SoM
+	 * MMC0_DAT0: no padconfig
+	 * MMC0_DAT1: no padconfig
+	 * MMC0_DAT2: no padconfig
+	 * MMC0_DAT3: no padconfig
+	 * MMC0_DAT4: no padconfig
+	 * MMC0_DAT5: no padconfig
+	 * MMC0_DAT6: no padconfig
+	 * MMC0_DAT7: no padconfig
+	 * MMC0_DS: no padconfig, external pull-down on SoM
+	 */
+
+	main_mmc1_pins_default: main-mmc1-pins-default {
+		pinctrl-single,pins = <
+			AM64X_IOPAD(0x0294, PIN_INPUT_PULLUP, 0)	/* (J19) MMC1_CMD */
+			AM64X_IOPAD(0x028c, PIN_INPUT, 0)			/* Pad MMC1_CLK Mux MMC1_CLK */
+			AM64X_IOPAD(0x0288, PIN_INPUT_PULLUP, 0)	/* Pad MMC1_DAT0 Mux MMC1_DAT0 */
+			AM64X_IOPAD(0x0284, PIN_INPUT_PULLUP, 0)	/* Pad MMC1_DAT1 Mux MMC1_DAT1 */
+			AM64X_IOPAD(0x0280, PIN_INPUT_PULLUP, 0)	/* Pad MMC1_DAT2 Mux MMC1_DAT2 */
+			AM64X_IOPAD(0x027c, PIN_INPUT_PULLUP, 0)	/* Pad MMC1_DAT3 Mux MMC1_DAT3 */
+			/* external pull-down on SoM & Carrier - should be up or DNP */
+			AM64X_IOPAD(0x0298, PIN_INPUT_PULLUP, 0)	/* Pad MMC1_SDCD Mux MMC1_SDCD */
+			AM64X_IOPAD(0x0290, PIN_INPUT, 0)			/* MMC1_CLKLB: Undocumented clock loopback */
+		>;
+	};
+
+	main_spi0_pins_default: main-spi0-pins-default {
+		pinctrl-single,pins = <
+			/* external pull-down on SoM */
+			AM64X_IOPAD(0x0000, PIN_OUTPUT, 0)	/* Pad OSPI0_CLK Mux OSPI0_CLK */
+			AM64X_IOPAD(0x0008, PIN_OUTPUT, 0)	/* Pad OSPI0_DQS Mux OSPI0_DQS */
+			/* external pull-up on SoM */
+			AM64X_IOPAD(0x002c, PIN_OUTPUT, 0)	/* Pad OSPI0_CSn0 Mux OSPI0_CSn0 */
+			AM64X_IOPAD(0x000c, PIN_INPUT, 0)	/* Pad OSPI0_D0 Mux OSPI0_D0 */
+			AM64X_IOPAD(0x0010, PIN_INPUT, 0)	/* Pad OSPI0_D1 Mux OSPI0_D1 */
+			AM64X_IOPAD(0x0014, PIN_INPUT, 0)	/* Pad OSPI0_D2 Mux OSPI0_D2 */
+			AM64X_IOPAD(0x0018, PIN_INPUT, 0)	/* Pad OSPI0_D3 Mux OSPI0_D3 */
+			AM64X_IOPAD(0x001c, PIN_INPUT, 0)	/* Pad OSPI0_D4 Mux OSPI0_D4 */
+			AM64X_IOPAD(0x0020, PIN_INPUT, 0)	/* Pad OSPI0_D5 Mux OSPI0_D5 */
+			AM64X_IOPAD(0x0024, PIN_INPUT, 0)	/* Pad OSPI0_D6 Mux OSPI0_D6 */
+			AM64X_IOPAD(0x0028, PIN_INPUT, 0)	/* Pad OSPI0_D7 Mux OSPI0_D7 */
+		>;
+	};
+
+	flash0_pins_default: flash0-pins-default {
+		pinctrl-single,pins = <
+			AM64X_IOPAD(0x0034, PIN_OUTPUT, 7)	/* Pad OSPI0_CSn2 Mux GPIO0_13 */
+			AM64X_IOPAD(0x0038, PIN_INPUT, 7)	/* Pad OSPI0_CSn3 Mux GPIO0_14 */
+		>;
+	};
+
+	main_uart0_pins_default: main-uart0-pins-default {
+		pinctrl-single,pins = <
+			AM64X_IOPAD(0x0230, PIN_INPUT, 0)	/* Pad UART0_RXD Mux UART0_RXD */
+			AM64X_IOPAD(0x0234, PIN_OUTPUT, 0)	/* Pad UART0_TXD Mux UART0_TXD */
+		>;
+	};
+
+	main_uart3_pins_default: main-uart3-pins-default {
+		pinctrl-single,pins = <
+			AM64X_IOPAD(0x016c, PIN_INPUT, 10)	/* Pad PRG0_PRU0_GPO3 Mux UART3_CTSn */
+			AM64X_IOPAD(0x0170, PIN_OUTPUT, 10)	/* Pad PRG0_PRU0_GPO4 Mux UART3_TXD */
+			AM64X_IOPAD(0x0174, PIN_OUTPUT, 10)	/* Pad PRG0_PRU0_GPO5 Mux UART3_RTSn */
+			AM64X_IOPAD(0x01ac, PIN_INPUT, 10)	/* Pad PRG0_PRU0_GPO19 Mux UART3_RXD */
+		>;
+	};
+
+	main_usb0_pins_default: main-usb0-pins-default {
+		pinctrl-single,pins = <
+			AM64X_IOPAD(0x02a8, PIN_OUTPUT, 0)	/* Pad USB0_DRVVBUS Mux USB0_DRVVBUS */
+		>;
+	};
+
+	mdio0_pins_default: mdio0-pins-default {
+		pinctrl-single,pins = <
+			/* TODO: check pull */
+			AM64X_IOPAD(0x01fc, PIN_OUTPUT, 4)	/* Pad PRG0_PRU1_GPO19 Mux MDIO0_MDC */
+			AM64X_IOPAD(0x01f8, PIN_INPUT, 4)	/* Pad PRG0_PRU1_GPO18 Mux MDIO0_MDIO */
+		>;
+	};
+
+	pcie0_pins_default: pcie0-pins-default {
+		pinctrl-single,pins = <
+			/* connector M2 RESET */
+			AM64X_IOPAD(0x0030, PIN_OUTPUT, 7)	/* Pad OSPI0_CSn1 Mux GPIO0_12 */
+			/* connectors M1 & M2 W_DISABLE1 */
+			AM64X_IOPAD(0x0084, PIN_OUTPUT, 7)	/* Pad GPMC0_ADVN_ALE Mux GPIO0_32 */
+			/* connectors M1 & M2 W_DISABLE2 */
+			AM64X_IOPAD(0x008c, PIN_OUTPUT, 7)	/* Pad GPMC0_WEN Mux GPIO0_34 */
+			/* connectors M1 & M2 PERST0 (PCI Reset) */
+			AM64X_IOPAD(0x019c, PIN_OUTPUT, 7)	/* Pad PRG0_PRU0_GPO15 Mux GPIO1_15 */
+			/* connector M1 CLKREQ0 */
+			AM64X_IOPAD(0x018c, PIN_INPUT, 7)	/* Pad PRG0_PRU0_GPO11 Mux GPIO1_11 */
+			/* connector M2 CLKREQ0 */
+			AM64X_IOPAD(0x01ec, PIN_INPUT, 7)	/* Pad PRG0_PRU1_GPO15 Mux GPIO1_35 */
+			/* PCIE0_OE, external pull-up on carrier */
+			AM64X_IOPAD(0x0198, PIN_OUTPUT, 7)	/* Pad PRG0_PRU0_GPO14 Mux GPIO1_14 */
+			/* PCIE1_OE, external pull-up on carrier */
+			AM64X_IOPAD(0x0180, PIN_OUTPUT, 7)	/* Pad PRG0_PRU0_GPO8 Mux GPIO1_8 */
+			/* PCIE2_OE, external pull-up on carrier */
+			AM64X_IOPAD(0x01a0, PIN_OUTPUT, 7)	/* Pad PRG0_PRU0_GPO16 Mux GPIO1_16 */
+			/* serdes mux SEL, external pull-down on carrier */
+			AM64X_IOPAD(0x0200, PIN_OUTPUT, 7)	/* Pad PRG0_MDIO0_MDIO Mux GPIO1_40 */
+			/* mux enable */
+			AM64X_IOPAD(0x0204, PIN_OUTPUT, 7)	/* Pad PRG0_MDIO0_MDC Mux GPIO1_41 */
+		>;
+	};
+
+	pru1_mdio0_pins_default: pru1-mdio0-pins-default {
+		pinctrl-single,pins = <
+			/* TODO: check pull */
+			AM64X_IOPAD(0x015c, PIN_OUTPUT, 0)	/* Pad PRG1_MDIO0_MDC Mux PRG1_MDIO0_MDC */
+			AM64X_IOPAD(0x0158, PIN_INPUT, 0)	/* Pad PRG1_MDIO0_MDIO Mux PRG1_MDIO0_MDIO */
+		>;
+	};
+
+	pru_rgmii1_pins_default: pru-rgmii1-pins-default {
+		pinctrl-single,pins = <
+			AM64X_IOPAD(0x00b8, PIN_INPUT, 2)	/* (Y7) PRG1_PRU0_GPO0.PRG1_RGMII1_RD0 */
+			AM64X_IOPAD(0x00bc, PIN_INPUT, 2)	/* (U8) PRG1_PRU0_GPO1.PRG1_RGMII1_RD1 */
+			AM64X_IOPAD(0x00c0, PIN_INPUT, 2)	/* (W8) PRG1_PRU0_GPO2.PRG1_RGMII1_RD2 */
+			AM64X_IOPAD(0x00c4, PIN_INPUT, 2)	/* (V8) PRG1_PRU0_GPO3.PRG1_RGMII1_RD3 */
+			AM64X_IOPAD(0x00d0, PIN_INPUT, 2)	/* (AA7) PRG1_PRU0_GPO6.PRG1_RGMII1_RXC */
+			AM64X_IOPAD(0x00c8, PIN_INPUT, 2)	/* (Y8) PRG1_PRU0_GPO4.PRG1_RGMII1_RX_CTL */
+			AM64X_IOPAD(0x00e4, PIN_OUTPUT, 2)	/* (AA8) PRG1_PRU0_GPO11.PRG1_RGMII1_TD0 */
+			AM64X_IOPAD(0x00e8, PIN_OUTPUT, 2)	/* (U9) PRG1_PRU0_GPO12.PRG1_RGMII1_TD1 */
+			AM64X_IOPAD(0x00ec, PIN_OUTPUT, 2)	/* (W9) PRG1_PRU0_GPO13.PRG1_RGMII1_TD2 */
+			AM64X_IOPAD(0x00f0, PIN_OUTPUT, 2)	/* (AA9) PRG1_PRU0_GPO14.PRG1_RGMII1_TD3 */
+			AM64X_IOPAD(0x00f8, PIN_INPUT, 2)	/* (V9) PRG1_PRU0_GPO16.PRG1_RGMII1_TXC */
+			AM64X_IOPAD(0x00f4, PIN_OUTPUT, 2)	/* (Y9) PRG1_PRU0_GPO15.PRG1_RGMII1_TX_CTL */
+		>;
+	};
+
+	pru_rgmii2_pins_default: pru-rgmii2-pins-default {
+		pinctrl-single,pins = <
+			AM64X_IOPAD(0x0108, PIN_INPUT, 2)	/* Pad PRG1_PRU1_GPO0 Mux RGMII2_RD0 */
+			AM64X_IOPAD(0x010c, PIN_INPUT, 2)	/* PadPRG1_PRU1_GPO1 Mux RGMII2_RD1 */
+			AM64X_IOPAD(0x0110, PIN_INPUT, 2)	/* Pad PRG1_PRU1_GPO2 Mux RGMII2_RD2 */
+			AM64X_IOPAD(0x0114, PIN_INPUT, 2)	/* Pad PRG1_PRU1_GPO3 Mux RGMII2_RD3 */
+			AM64X_IOPAD(0x0120, PIN_INPUT, 2)	/* Pad PRG1_PRU1_GPO6 Mux RGMII2_RXC */
+			AM64X_IOPAD(0x0118, PIN_INPUT, 2)	/* Pad PRG1_PRU1_GPO4 Mux RGMII2_RX_CTL */
+			AM64X_IOPAD(0x0134, PIN_OUTPUT, 2)	/* Pad PRG1_PRU1_GPO11 Mux RGMII2_TD0 */
+			AM64X_IOPAD(0x0138, PIN_OUTPUT, 2)	/* Pad PRG1_PRU1_GPO12 Mux RGMII2_TD1 */
+			AM64X_IOPAD(0x013c, PIN_OUTPUT, 2)	/* Pad PRG1_PRU1_GPO13 Mux RGMII2_TD2 */
+			AM64X_IOPAD(0x0140, PIN_OUTPUT, 2)	/* Pad PRG1_PRU1_GPO14 Mux RGMII2_TD3 */
+			AM64X_IOPAD(0x0148, PIN_INPUT, 2)	/* Pad PRG1_PRU1_GPO16 Mux RGMII2_TXC */
+			AM64X_IOPAD(0x0144, PIN_OUTPUT, 2)	/* Pad PRG1_PRU1_GPO15 Mux RGMII2_TX_CTL */
+		>;
+	};
+
+	regulator_pcie_3v3_pins_default: regulator-pcie-3v3-pins-default {
+		pinctrl-single,pins = <
+			AM64X_IOPAD(0x01dc, PIN_OUTPUT, 7)	/* Pad PRG0_PRU1_GPO11 Mux GPIO1_31 */
+		>;
+	};
+
+	regulator_vpp_1v8_pins_default: regulator-vpp-1v8-pins-default {
+		pinctrl-single,pins = <
+			AM64X_IOPAD(0x029c, PIN_OUTPUT, 7)	/* Pad MMC1_SDWP Mux GPIO1_78 */
+		>;
+	};
+
+	rgmii1_pins_default: rgmii1-pins-default {
+		pinctrl-single,pins = <
+			AM64X_IOPAD(0x01cc, PIN_INPUT, 4)	/* Pad PRG0_PRU1_GPO7 Mux RGMII1_RD0 */
+			AM64X_IOPAD(0x01d4, PIN_INPUT, 4)	/* Pad PRG0_PRU1_GPO9 Mux RGMII1_RD1 */
+			AM64X_IOPAD(0x01d8, PIN_INPUT, 4)	/* Pad PRG0_PRU1_GPO10 Mux RGMII1_RD2 */
+			AM64X_IOPAD(0x01f4, PIN_INPUT, 4)	/* Pad PRG0_PRU1_GPO17 Mux RGMII1_RD3 */
+			AM64X_IOPAD(0x0188, PIN_INPUT, 4)	/* Pad PRG0_PRU0_GPO10 Mux RGMII1_RXC */
+			AM64X_IOPAD(0x0184, PIN_INPUT, 4)	/* Pad PRG0_PRU0_GPO9 Mux RGMII1_RX_CTL */
+			AM64X_IOPAD(0x0124, PIN_OUTPUT, 4)	/* Pad PRG1_PRU1_GPO7 Mux RGMII1_TD0 */
+			AM64X_IOPAD(0x012c, PIN_OUTPUT, 4)	/* Pad PRG1_PRU1_GPO9 Mux RGMII1_TD1 */
+			AM64X_IOPAD(0x0130, PIN_OUTPUT, 4)	/* Pad PRG1_PRU1_GPO10 Mux RGMII1_TD2 */
+			AM64X_IOPAD(0x014c, PIN_OUTPUT, 4)	/* Pad PRG1_PRU1_GPO17 Mux RGMII1_TD3 */
+			AM64X_IOPAD(0x00e0, PIN_INPUT, 4)	/* Pad PRG1_PRU0_GPO10 Mux RGMII1_TXC */
+			AM64X_IOPAD(0x00dc, PIN_OUTPUT, 4)	/* Pad PRG1_PRU0_GPO9 Mux RGMII1_TX_CTL */
+		>;
+	};
+};
+
+&main_r5fss0_core0 {
+	status = "disabled";
+};
+
+&main_r5fss0_core1 {
+	status = "disabled";
+};
+
+&main_r5fss1_core0 {
+	status = "disabled";
+};
+
+&main_r5fss1_core1 {
+	status = "disabled";
+};
+
+&main_spi0 {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&main_spi0_pins_default>;
+	ti,pindir-d0-out-d1-in = <1>;
+	ti,spi-num-cs = <1>;
+
+	/* Carrier */
+	sh28hs512t@0 {
+		status = "okay";
+		compatible = "jedec,spi-nor";
+		reg = <0>;
+		spi-tx-bus-width = <8>;
+		spi-rx-bus-width = <8>;
+		spi-max-frequency = <200000000>;
+		cdns,tshsl-ns = <50>;
+		cdns,tsd2d-ns = <50>;
+		cdns,tchsh-ns = <4>;
+		cdns,tslch-ns = <4>;
+		cdns,read-delay = <0>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&flash0_pins_default>;
+		interrupt-parent = <&main_gpio0>;
+		interrupts = <14 IRQ_TYPE_EDGE_FALLING>;
+		reset-gpios = <&main_gpio0 13 GPIO_ACTIVE_LOW>;
+	};
+};
+
+&main_spi1 {
+	status = "disabled";
+};
+
+&main_spi2 {
+	status = "disabled";
+};
+
+&main_spi3 {
+	status = "disabled";
+};
+
+&main_spi4 {
+	status = "disabled";
+};
+
+/* Cortex-A53 console*/
+&main_uart0 {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&main_uart0_pins_default>;
+};
+
+&main_uart1 {
+	status = "disabled";
+};
+
+&main_uart2 {
+	status = "disabled";
+};
+
+/* RS485 */
+/* Carrier */
+&main_uart3 {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&main_uart3_pins_default>;
+	uart-has-rtscts;
+
+	/* THVD1400DR Transceiver */
+	rs485-rts-active-low;
+	linux,rs485-enabled-at-boot-time;
+};
+
+&main_uart4 {
+	status = "disabled";
+};
+
+&main_uart5 {
+	status = "disabled";
+};
+
+&main_uart6 {
+	status = "disabled";
+};
+
+&mcu_gpio0 {
+	status = "disabled";
+};
+
+&mcu_i2c0 {
+	status = "disabled";
+};
+
+&mcu_i2c1 {
+	status = "disabled";
+};
+
+&mcu_m4fss {
+	status = "disabled";
+};
+
+&mcu_spi0 {
+	status = "disabled";
+};
+
+&mcu_spi1 {
+	status = "disabled";
+};
+
+&mcu_uart0 {
+	status = "disabled";
+};
+
+&mcu_uart1 {
+	status = "disabled";
+};
+
+#if SERDES0_USB3
+&pcie0_rc {
+	status = "disabled";
+};
+
+&pcie0_ep {
+	status = "disabled";
+};
+#else
+/* Carrier M.2 connector M2 */
+&pcie0_rc {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&pcie0_pins_default>;
+	reset-gpios = <&main_gpio1 15 GPIO_ACTIVE_LOW>;
+	phys = <&serdes0_pcie_link>;
+	phy-names = "pcie-phy";
+	num-lanes = <1>;
+#if SERDES0_M1
+	clocks = <&clk_pcie_soc>, <&clk_pcie_m1>;
+	clock-names = "pcie_refclk", "pcie_busclk";
+#else
+	clocks = <&clk_pcie_soc>, <&clk_pcie_m2>;
+	clock-names = "pcie_refclk", "pcie_busclk";
+#endif
+};
+
+&pcie0_ep {
+	status = "disabled";
+	phys = <&serdes0_pcie_link>;
+	phy-names = "pcie-phy";
+	num-lanes = <1>;
+};
+#endif
+
+/* eMMC */
+/* SoM */
+&sdhci0 {
+	status = "okay";
+	/* mmc0 pins have no padconfig */
+	bus-width = <8>;
+	ti,driver-strength-ohm = <50>;
+	disable-wp;
+	non-removable;
+	cap-mmc-hw-reset;
+	no-sd;
+
+	/*
+	 * MMC controller supports switching between 1.8V and 3.3V signalling.
+	 * However MMC0 (unlike MMC1) does not integrate an LDO.
+	 * Explicitly link a regulator node for indicating to the driver which
+	 * voltages are actually usable.
+	 */
+	vqmmc-supply = <&vdd_mmc0>;
+};
+
+/* microSD connector */
+/* Carrier */
+&sdhci1 {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&main_mmc1_pins_default>;
+	bus-width = <4>;
+	ti,driver-strength-ohm = <50>;
+	disable-wp;
+};
+
+/* Carrier, because mux is on carrier */
+&serdes0 {
+	/*
+	 * Serdes Signals are routed via mux to either m.2 connectors:
+	 * - M1: USB-3.1
+	 * - M2: PCI-E
+	 */
+	 status = "okay";
+
+#if SERDES0_USB3
+	serdes0_usb_link: phy@0 {
+		status = "okay";
+		reg = <0>;
+		cdns,num-lanes = <1>;
+		#phy-cells = <0>;
+		cdns,phy-type = <PHY_TYPE_USB3>;
+		resets = <&serdes_wiz0 1>;
+	};
+#else /* PCIE */
+	serdes0_pcie_link: phy@0 {
+		status = "okay";
+		reg = <0>;
+		cdns,num-lanes = <1>;
+		#phy-cells = <0>;
+		cdns,phy-type = <PHY_TYPE_PCIE>;
+		resets = <&serdes_wiz0 1>;
+	};
+#endif
+};
+
+/* Carrier, because mux is on carrier */
+&serdes_ln_ctrl {
+#if SERDES0_USB3
+	idle-states = <AM64_SERDES0_LANE0_USB>;
+#else
+	idle-states = <AM64_SERDES0_LANE0_PCIE0>;
+#endif
+};
+
+&tscadc0 {
+	status = "disabled";
+};
+
+/* Carrier choice */
+&usbss0 {
+	status = "okay";
+	ti,vbus-divider;
+#if !SERDES0_USB3
+	ti,usb2-only;
+#endif
+};
+
+/* USB-A connector (J3) (or USB-Hub depending on R107-R110) */
+/* Carrier / SoM? dr_mode for carrier, pins for som, maximum-speed for carrier */
+&usb0 {
+	status = "okay";
+	dr_mode = "host";
+	pinctrl-names = "default";
+	pinctrl-0 = <&main_usb0_pins_default>;
+#if SERDES0_USB3
+	maximum-speed = "super-speed";
+	phys = <&serdes0_pcie_usb_link>;
+	phy-names = "cdns3,usb3-phy";
+#else
+	maximum-speed = "high-speed";
+#endif
+};
-- 
2.35.3

