From 5a6f2e42a29024518fd3da49aecbce4e0b920ea6 Mon Sep 17 00:00:00 2001
From: Josua Mayer <josua@solid-run.com>
Date: Thu, 4 May 2023 16:17:43 +0300
Subject: [PATCH 6/8] mmc: core: disable voltage-switch from same voltage

This is a workaround for Samsung eMMC connected to TI AM6442 SoC to
enable HS200 mode.
After initial detection of mmc card Linux will initiate voltage-switch
to 3.3V or 1.8V - after which communication to the eMMC times out for
unknown reasons.

Skipping this procedure when the host controller is already configured
for 1.8V avoids the problem completely.

Signed-off-by: Josua Mayer <josua@solid-run.com>
---
 drivers/mmc/core/core.c | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/drivers/mmc/core/core.c b/drivers/mmc/core/core.c
index 8f2465394253..99094c035121 100644
--- a/drivers/mmc/core/core.c
+++ b/drivers/mmc/core/core.c
@@ -1142,11 +1142,24 @@ u32 mmc_select_voltage(struct mmc_host *host, u32 ocr)
 	return ocr;
 }
 
+static const char *mmc_voltage_strings[3] = {
+	"3.3",
+	"1.8",
+	"1.2"
+};
+
 int mmc_set_signal_voltage(struct mmc_host *host, int signal_voltage)
 {
 	int err = 0;
 	int old_signal_voltage = host->ios.signal_voltage;
 
+	if (old_signal_voltage == signal_voltage) {
+		dev_info(mmc_dev(host),
+				 "skipped voltage switch, already configured for %sV\n",
+				 mmc_voltage_strings[signal_voltage]);
+		return err;
+	}
+
 	host->ios.signal_voltage = signal_voltage;
 	if (host->ops->start_signal_voltage_switch)
 		err = host->ops->start_signal_voltage_switch(host, &host->ios);
-- 
2.35.3

