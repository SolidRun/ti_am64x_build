From 3cd1577b69ba418ee14f34e95a5eca7e67ad8a84 Mon Sep 17 00:00:00 2001
From: Josua Mayer <josua@solid-run.com>
Date: Thu, 28 Dec 2023 13:32:35 +0100
Subject: [PATCH 09/11] arm64: dts: ti: k3-am64-main: icssg: (hack-)fix
 deferred probe of iep

DT nodes for icssg[01]_iep[01] have a clock reference to
icssg[01]/icssg[01]_cfg/clocks/icssg0_iepclk_mux.

This clock is supported by pruss driver binding to the top-level
icssg[01] node.

When iep driver is probed before pruss, linux notices the clock
dependency and iteratively searchs from the clock node upwards for node
that declares compatible strings and can be expected to have a driver
binding to it eventually. It finds icssg[01]_cfg node and adds starts
tracking it as a depndency for iep.

When pruss driver probes it does not bind to the icssg[01]_cfg node,
however it does create clock objects for the clock nodes below it.

At this point iep never probes because it is waiting forever on the
icssg[01]_cfg node, for a driver binding to either declared compatible
strings: "ti,pruss-cfg", "syscon".
Hence pru ethernet referencing the iep nodes never probes.

"Fix" the problem by removing the compatible string. This allows linux
to find the correct parent node supplying the clocks.

Signed-off-by: Josua Mayer <josua@solid-run.com>
---
 arch/arm64/boot/dts/ti/k3-am64-main.dtsi | 2 --
 1 file changed, 2 deletions(-)

diff --git a/arch/arm64/boot/dts/ti/k3-am64-main.dtsi b/arch/arm64/boot/dts/ti/k3-am64-main.dtsi
index 1ff8d251d688..c65ff2157007 100644
--- a/arch/arm64/boot/dts/ti/k3-am64-main.dtsi
+++ b/arch/arm64/boot/dts/ti/k3-am64-main.dtsi
@@ -1243,7 +1243,6 @@ icssg0_mem: memories@0 {
 		};
 
 		icssg0_cfg: cfg@26000 {
-			compatible = "ti,pruss-cfg", "syscon";
 			reg = <0x26000 0x200>;
 			#address-cells = <1>;
 			#size-cells = <1>;
@@ -1422,7 +1421,6 @@ icssg1_mem: memories@0 {
 		};
 
 		icssg1_cfg: cfg@26000 {
-			compatible = "ti,pruss-cfg", "syscon";
 			reg = <0x26000 0x200>;
 			#address-cells = <1>;
 			#size-cells = <1>;
-- 
2.43.0

